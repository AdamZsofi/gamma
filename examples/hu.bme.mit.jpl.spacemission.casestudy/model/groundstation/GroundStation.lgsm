<?xml version="1.0" encoding="ASCII"?>
<hu.bme.mit.gamma.statechart.lowlevel:Package xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:hu.bme.mit.gamma.action="http://www.mit.bme.hu/gamma/action/Model" xmlns:hu.bme.mit.gamma.expression="http://www.mit.bme.hu/gamma/expression/Model" xmlns:hu.bme.mit.gamma.statechart.lowlevel="http://www.mit.bme.hu/gamma/statechart/lowlevel/Model" name="groundstation">
  <imports name="interfaces"/>
  <components xsi:type="hu.bme.mit.gamma.statechart.lowlevel:StatechartDefinition" name="GroundStation" timeoutDeclarations="//@components.0/@variableDeclarations.0 //@components.0/@variableDeclarations.1">
    <eventDeclarations name="connection_data">
      <isRaised name="isRaised">
        <type xsi:type="hu.bme.mit.gamma.expression:BooleanTypeDefinition"/>
      </isRaised>
    </eventDeclarations>
    <eventDeclarations name="connection_ping" direction="OUT">
      <isRaised name="isRaised">
        <type xsi:type="hu.bme.mit.gamma.expression:BooleanTypeDefinition"/>
      </isRaised>
    </eventDeclarations>
    <eventDeclarations name="control_start">
      <isRaised name="isRaised">
        <type xsi:type="hu.bme.mit.gamma.expression:BooleanTypeDefinition"/>
      </isRaised>
    </eventDeclarations>
    <eventDeclarations name="control_shutdown">
      <isRaised name="isRaised">
        <type xsi:type="hu.bme.mit.gamma.expression:BooleanTypeDefinition"/>
      </isRaised>
    </eventDeclarations>
    <regions name="Main">
      <stateNodes xsi:type="hu.bme.mit.gamma.statechart.lowlevel:State" name="Idle" outgoingTransitions="//@components.0/@transitions.1 //@components.0/@transitions.2" incomingTransitions="//@components.0/@transitions.0 //@components.0/@transitions.4">
        <entryAction xsi:type="hu.bme.mit.gamma.action:AssignmentStatement">
          <lhs declaration="//@components.0/@variableDeclarations.1"/>
          <rhs xsi:type="hu.bme.mit.gamma.expression:IntegerLiteralExpression" value="0"/>
        </entryAction>
        <exitAction xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
      </stateNodes>
      <stateNodes xsi:type="hu.bme.mit.gamma.statechart.lowlevel:State" name="Operation" outgoingTransitions="//@components.0/@transitions.3 //@components.0/@transitions.4" incomingTransitions="//@components.0/@transitions.1 //@components.0/@transitions.2 //@components.0/@transitions.3">
        <regions name="ReceiveData">
          <stateNodes xsi:type="hu.bme.mit.gamma.statechart.lowlevel:State" name="Waiting" outgoingTransitions="//@components.0/@transitions.6" incomingTransitions="//@components.0/@transitions.5 //@components.0/@transitions.6">
            <entryAction xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
            <exitAction xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
          </stateNodes>
          <stateNodes xsi:type="hu.bme.mit.gamma.statechart.lowlevel:InitialState" name="Entry2" outgoingTransitions="//@components.0/@transitions.5"/>
        </regions>
        <entryAction xsi:type="hu.bme.mit.gamma.action:Block">
          <actions xsi:type="hu.bme.mit.gamma.action:Block">
            <actions xsi:type="hu.bme.mit.gamma.action:AssignmentStatement">
              <lhs declaration="//@components.0/@eventDeclarations.1/@isRaised"/>
              <rhs xsi:type="hu.bme.mit.gamma.expression:TrueExpression"/>
            </actions>
          </actions>
          <actions xsi:type="hu.bme.mit.gamma.action:AssignmentStatement">
            <lhs declaration="//@components.0/@variableDeclarations.0"/>
            <rhs xsi:type="hu.bme.mit.gamma.expression:IntegerLiteralExpression" value="0"/>
          </actions>
        </entryAction>
        <exitAction xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
      </stateNodes>
      <stateNodes xsi:type="hu.bme.mit.gamma.statechart.lowlevel:InitialState" name="Entry1" outgoingTransitions="//@components.0/@transitions.0"/>
    </regions>
    <transitions source="//@components.0/@regions.0/@stateNodes.2" target="//@components.0/@regions.0/@stateNodes.0">
      <action xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
    </transitions>
    <transitions source="//@components.0/@regions.0/@stateNodes.0" target="//@components.0/@regions.0/@stateNodes.1">
      <guard xsi:type="hu.bme.mit.gamma.expression:EqualityExpression">
        <leftOperand xsi:type="hu.bme.mit.gamma.expression:ReferenceExpression" declaration="//@components.0/@eventDeclarations.2/@isRaised"/>
        <rightOperand xsi:type="hu.bme.mit.gamma.expression:TrueExpression"/>
      </guard>
      <action xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
    </transitions>
    <transitions source="//@components.0/@regions.0/@stateNodes.0" target="//@components.0/@regions.0/@stateNodes.1">
      <guard xsi:type="hu.bme.mit.gamma.expression:LessEqualExpression">
        <leftOperand xsi:type="hu.bme.mit.gamma.expression:MultiplyExpression">
          <operands xsi:type="hu.bme.mit.gamma.expression:IntegerLiteralExpression" value="1000"/>
          <operands xsi:type="hu.bme.mit.gamma.expression:IntegerLiteralExpression" value="30"/>
        </leftOperand>
        <rightOperand xsi:type="hu.bme.mit.gamma.expression:ReferenceExpression" declaration="//@components.0/@variableDeclarations.1"/>
      </guard>
      <action xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
    </transitions>
    <transitions source="//@components.0/@regions.0/@stateNodes.1" target="//@components.0/@regions.0/@stateNodes.1">
      <guard xsi:type="hu.bme.mit.gamma.expression:LessEqualExpression">
        <leftOperand xsi:type="hu.bme.mit.gamma.expression:MultiplyExpression">
          <operands xsi:type="hu.bme.mit.gamma.expression:IntegerLiteralExpression" value="1000"/>
          <operands xsi:type="hu.bme.mit.gamma.expression:IntegerLiteralExpression" value="10"/>
        </leftOperand>
        <rightOperand xsi:type="hu.bme.mit.gamma.expression:ReferenceExpression" declaration="//@components.0/@variableDeclarations.0"/>
      </guard>
      <action xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
    </transitions>
    <transitions source="//@components.0/@regions.0/@stateNodes.1" target="//@components.0/@regions.0/@stateNodes.0">
      <guard xsi:type="hu.bme.mit.gamma.expression:EqualityExpression">
        <leftOperand xsi:type="hu.bme.mit.gamma.expression:ReferenceExpression" declaration="//@components.0/@eventDeclarations.3/@isRaised"/>
        <rightOperand xsi:type="hu.bme.mit.gamma.expression:TrueExpression"/>
      </guard>
      <action xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
    </transitions>
    <transitions source="//@components.0/@regions.0/@stateNodes.1/@regions.0/@stateNodes.1" target="//@components.0/@regions.0/@stateNodes.1/@regions.0/@stateNodes.0">
      <action xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
    </transitions>
    <transitions source="//@components.0/@regions.0/@stateNodes.1/@regions.0/@stateNodes.0" target="//@components.0/@regions.0/@stateNodes.1/@regions.0/@stateNodes.0">
      <guard xsi:type="hu.bme.mit.gamma.expression:EqualityExpression">
        <leftOperand xsi:type="hu.bme.mit.gamma.expression:ReferenceExpression" declaration="//@components.0/@eventDeclarations.0/@isRaised"/>
        <rightOperand xsi:type="hu.bme.mit.gamma.expression:TrueExpression"/>
      </guard>
      <action xsi:type="hu.bme.mit.gamma.action:EmptyStatement"/>
    </transitions>
    <variableDeclarations name="pingTimeout">
      <type xsi:type="hu.bme.mit.gamma.expression:IntegerTypeDefinition"/>
      <expression xsi:type="hu.bme.mit.gamma.expression:MultiplyExpression">
        <operands xsi:type="hu.bme.mit.gamma.expression:IntegerLiteralExpression" value="1000"/>
        <operands xsi:type="hu.bme.mit.gamma.expression:IntegerLiteralExpression" value="10"/>
      </expression>
    </variableDeclarations>
    <variableDeclarations name="autoStart">
      <type xsi:type="hu.bme.mit.gamma.expression:IntegerTypeDefinition"/>
      <expression xsi:type="hu.bme.mit.gamma.expression:MultiplyExpression">
        <operands xsi:type="hu.bme.mit.gamma.expression:IntegerLiteralExpression" value="1000"/>
        <operands xsi:type="hu.bme.mit.gamma.expression:IntegerLiteralExpression" value="30"/>
      </expression>
    </variableDeclarations>
  </components>
</hu.bme.mit.gamma.statechart.lowlevel:Package>

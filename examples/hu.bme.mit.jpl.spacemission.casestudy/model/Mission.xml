<nta>
<declaration>


broadcast chan finalize;

bool isStable = false;

int batteryVariableOfsatellite = 100;

bool rechargingOfsatellite = false;

int dataOfsatellite = 100;

bool toRaise_connection_dataOfstation;

bool isRaised_connection_dataOfstation;

bool toRaise_control_startOfstation;

bool isRaised_control_startOfstation;

bool toRaise_control_shutdownOfstation;

bool isRaised_control_shutdownOfstation;

bool toRaise_connection_pingOfsatellite;

bool isRaised_connection_pingOfsatellite;

broadcast chan runCycleMainOfStatechartOfstation;

bool isScheduledMainOfStatechartOfstation;

broadcast chan runCycleSendDataOfTransmittingOfsatellite;

bool isScheduledSendDataOfTransmittingOfsatellite;

broadcast chan runCycleBatteryOfStatechartOfsatellite;

bool isScheduledBatteryOfStatechartOfsatellite;

broadcast chan runCycleCommunicationOfStatechartOfsatellite;

bool isScheduledCommunicationOfStatechartOfsatellite;

broadcast chan runCycleConsumePowerOfTransmittingOfsatellite;

bool isScheduledConsumePowerOfTransmittingOfsatellite;

broadcast chan runCycleReceiveDataOfOperationOfstation;

bool isScheduledReceiveDataOfOperationOfstation;

broadcast chan entryChanOfTransmitting172;

broadcast chan entryChanOfOperation173;

broadcast chan exitChanOfTransmitting172;

broadcast chan exitChanOfOperation173;

void clearOutEvents31() {
}

bool noInnerEvents() {
	bool tempVar0;
	bool tempVar1;
	bool tempVar2;
	bool tempVar3;
	tempVar0 = toRaise_control_startOfstation;
	tempVar1 = (tempVar0 || toRaise_connection_dataOfstation);
	tempVar2 = (tempVar1 || toRaise_connection_pingOfsatellite);
	tempVar3 = (tempVar2 || toRaise_control_shutdownOfstation);
	return !(tempVar3);
}

</declaration>
<template>
<name>
MainOfStatechartOfstation
</name>
<declaration>
clock timer11;
</declaration>
<location id="EntryLocation8">
<name>
EntryLocation8
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="Operation">
<name>
Operation
</name>
<label kind="invariant">
timer11 &lt;= 10 * 1000
</label>
</location>

<location id="entryOfOperation">
<name>
entryOfOperation
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Idle">
<name>
Idle
</name>
<label kind="invariant">
timer11 &lt;= 30 * 1000
</label>
</location>

<location id="entryOfIdle">
<name>
entryOfIdle
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="timer12">
<name>
timer12
</name>
</location>

<location id="timer18">
<name>
timer18
</name>
</location>

<location id="exitOfOperation544">
<name>
exitOfOperation544
</name>
<label kind="comments">
Synchronization location.
</label>
<committed/>
</location>

<location id="exitOfOperation545">
<name>
exitOfOperation545
</name>
<label kind="comments">
Synchronization location.
</label>
<committed/>
</location>

<location id="FinalizeBeforeOperation19">
<name>
FinalizeBeforeOperation19
</name>
<urgent/>
</location>
<init ref="EntryLocation8"/>

<transition>
<source ref="entryOfOperation"/>
<target ref="Operation"/>
<label kind="synchronisation">entryChanOfOperation173!</label>
<label kind="assignment">toRaise_connection_pingOfsatellite = true,
timer11 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfIdle"/>
<target ref="Idle"/>
<label kind="assignment">timer11 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="Idle"/>
<target ref="FinalizeBeforeOperation19"/>
<label kind="guard">isRaised_control_startOfstation</label>
<label kind="synchronisation">runCycleMainOfStatechartOfstation?</label>
<label kind="assignment">isScheduledMainOfStatechartOfstation = true</label>
</transition>

<transition>
<source ref="timer18"/>
<target ref="exitOfOperation545"/>
<label kind="synchronisation">runCycleMainOfStatechartOfstation?</label>
<label kind="assignment">isScheduledMainOfStatechartOfstation = true</label>
</transition>

<transition>
<source ref="EntryLocation8"/>
<target ref="entryOfIdle"/>
<label kind="assignment">isScheduledMainOfStatechartOfstation = true</label>
</transition>

<transition>
<source ref="timer12"/>
<target ref="FinalizeBeforeOperation19"/>
<label kind="synchronisation">runCycleMainOfStatechartOfstation?</label>
<label kind="assignment">isScheduledMainOfStatechartOfstation = true</label>
</transition>

<transition>
<source ref="Operation"/>
<target ref="exitOfOperation544"/>
<label kind="guard">isRaised_control_shutdownOfstation</label>
<label kind="synchronisation">runCycleMainOfStatechartOfstation?</label>
<label kind="assignment">isScheduledMainOfStatechartOfstation = true</label>
</transition>

<transition>
<source ref="Idle"/>
<target ref="timer12"/>
<label kind="guard">(isStable &amp;&amp; timer11 >= 30 * 1000)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Operation"/>
<target ref="timer18"/>
<label kind="guard">(isStable &amp;&amp; timer11 >= 10 * 1000)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="exitOfOperation544"/>
<target ref="entryOfIdle"/>
<label kind="synchronisation">exitChanOfOperation173!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="exitOfOperation545"/>
<target ref="FinalizeBeforeOperation19"/>
<label kind="synchronisation">exitChanOfOperation173!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="FinalizeBeforeOperation19"/>
<target ref="entryOfOperation"/>
<label kind="synchronisation">finalize?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="timer12"/>
<target ref="FinalizeBeforeOperation19"/>
<label kind="guard">isRaised_control_startOfstation</label>
<label kind="synchronisation">runCycleMainOfStatechartOfstation?</label>
<label kind="assignment">isScheduledMainOfStatechartOfstation = true</label>
</transition>

<transition>
<source ref="timer18"/>
<target ref="exitOfOperation544"/>
<label kind="guard">isRaised_control_shutdownOfstation</label>
<label kind="synchronisation">runCycleMainOfStatechartOfstation?</label>
<label kind="assignment">isScheduledMainOfStatechartOfstation = true</label>
</transition>
</template>

<template>
<name>
SendDataOfTransmittingOfsatellite
</name>
<declaration>
bool isActive;

clock timer13;
</declaration>
<location id="EntryLocation3">
<name>
EntryLocation3
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="GenInitLocation4">
<name>
GenInitLocation4
</name>
<label kind="comments">
Generated for the synchronization of subregions.
</label>
</location>

<location id="Sending">
<name>
Sending
</name>
<label kind="invariant">
timer13 &lt;= 1500
</label>
</location>

<location id="entryOfSending">
<name>
entryOfSending
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="timer14">
<name>
timer14
</name>
</location>
<init ref="GenInitLocation4"/>

<transition>
<source ref="entryOfSending"/>
<target ref="Sending"/>
<label kind="assignment">timer13 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="timer14"/>
<target ref="entryOfSending"/>
<label kind="guard">(isActive &amp;&amp; (dataOfsatellite &gt; 1 &amp;&amp; batteryVariableOfsatellite >= 40))</label>
<label kind="synchronisation">runCycleSendDataOfTransmittingOfsatellite?</label>
<label kind="assignment">isScheduledSendDataOfTransmittingOfsatellite = true,
dataOfsatellite = dataOfsatellite - 1,
toRaise_connection_dataOfstation = true</label>
</transition>

<transition>
<source ref="EntryLocation3"/>
<target ref="entryOfSending"/>
<label kind="guard">isActive</label>
<label kind="assignment">isScheduledSendDataOfTransmittingOfsatellite = true</label>
</transition>

<transition>
<source ref="Sending"/>
<target ref="timer14"/>
<label kind="guard">(isStable &amp;&amp; timer13 >= 1500)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Sending"/>
<target ref="EntryLocation3"/>
<label kind="synchronisation">entryChanOfTransmitting172?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="GenInitLocation4"/>
<target ref="EntryLocation3"/>
<label kind="synchronisation">entryChanOfTransmitting172?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer14"/>
<target ref="EntryLocation3"/>
<label kind="synchronisation">entryChanOfTransmitting172?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Sending"/>
<target ref="GenInitLocation4"/>
<label kind="synchronisation">exitChanOfTransmitting172?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="GenInitLocation4"/>
<target ref="GenInitLocation4"/>
<label kind="synchronisation">exitChanOfTransmitting172?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="timer14"/>
<target ref="GenInitLocation4"/>
<label kind="synchronisation">exitChanOfTransmitting172?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
BatteryOfStatechartOfsatellite
</name>
<declaration>
clock timer9;
</declaration>
<location id="EntryLocation0">
<name>
EntryLocation0
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="NotRecharging">
<name>
NotRecharging
</name>
</location>

<location id="entryOfNotRecharging">
<name>
entryOfNotRecharging
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Recharging">
<name>
Recharging
</name>
<label kind="invariant">
(timer9 &lt;= 10 * 1000 &amp;&amp; timer9 &lt;= 10 * 1000)
</label>
</location>

<location id="entryOfRecharging">
<name>
entryOfRecharging
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="timer10">
<name>
timer10
</name>
</location>

<location id="timer15">
<name>
timer15
</name>
</location>
<init ref="EntryLocation0"/>

<transition>
<source ref="entryOfNotRecharging"/>
<target ref="NotRecharging"/>
<label kind="assignment">rechargingOfsatellite = false</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfRecharging"/>
<target ref="Recharging"/>
<label kind="assignment">rechargingOfsatellite = true,
timer9 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="timer15"/>
<target ref="entryOfRecharging"/>
<label kind="guard">batteryVariableOfsatellite &lt; 100</label>
<label kind="synchronisation">runCycleBatteryOfStatechartOfsatellite?</label>
<label kind="assignment">isScheduledBatteryOfStatechartOfsatellite = true,
batteryVariableOfsatellite = batteryVariableOfsatellite + 1</label>
</transition>

<transition>
<source ref="timer10"/>
<target ref="entryOfNotRecharging"/>
<label kind="guard">batteryVariableOfsatellite == 100</label>
<label kind="synchronisation">runCycleBatteryOfStatechartOfsatellite?</label>
<label kind="assignment">isScheduledBatteryOfStatechartOfsatellite = true</label>
</transition>

<transition>
<source ref="EntryLocation0"/>
<target ref="entryOfNotRecharging"/>
<label kind="assignment">isScheduledBatteryOfStatechartOfsatellite = true</label>
</transition>

<transition>
<source ref="NotRecharging"/>
<target ref="entryOfRecharging"/>
<label kind="guard">batteryVariableOfsatellite &lt; 80</label>
<label kind="assignment">isScheduledBatteryOfStatechartOfsatellite = true</label>
</transition>

<transition>
<source ref="Recharging"/>
<target ref="timer10"/>
<label kind="guard">(isStable &amp;&amp; timer9 >= 10 * 1000)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Recharging"/>
<target ref="timer15"/>
<label kind="guard">(isStable &amp;&amp; timer9 >= 10 * 1000)</label>
<label kind="assignment"></label>
</transition>
</template>

<template>
<name>
CommunicationOfStatechartOfsatellite
</name>
<location id="EntryLocation7">
<name>
EntryLocation7
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="Transmitting">
<name>
Transmitting
</name>
</location>

<location id="entryOfTransmitting">
<name>
entryOfTransmitting
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="WaitingPing">
<name>
WaitingPing
</name>
</location>

<location id="exitOfTransmitting542">
<name>
exitOfTransmitting542
</name>
<label kind="comments">
Synchronization location.
</label>
<committed/>
</location>

<location id="exitOfTransmitting543">
<name>
exitOfTransmitting543
</name>
<label kind="comments">
Synchronization location.
</label>
<committed/>
</location>

<location id="FinalizeBeforeTransmitting20">
<name>
FinalizeBeforeTransmitting20
</name>
<urgent/>
</location>
<init ref="EntryLocation7"/>

<transition>
<source ref="entryOfTransmitting"/>
<target ref="Transmitting"/>
<label kind="synchronisation">entryChanOfTransmitting172!</label>
<label kind="assignment"></label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="Transmitting"/>
<target ref="exitOfTransmitting542"/>
<label kind="guard">(dataOfsatellite &lt;= 1 || batteryVariableOfsatellite &lt; 40)</label>
<label kind="assignment">isScheduledCommunicationOfStatechartOfsatellite = true</label>
</transition>

<transition>
<source ref="WaitingPing"/>
<target ref="FinalizeBeforeTransmitting20"/>
<label kind="guard">(rechargingOfsatellite == false &amp;&amp; isRaised_connection_pingOfsatellite)</label>
<label kind="synchronisation">runCycleCommunicationOfStatechartOfsatellite?</label>
<label kind="assignment">isScheduledCommunicationOfStatechartOfsatellite = true</label>
</transition>

<transition>
<source ref="EntryLocation7"/>
<target ref="WaitingPing"/>
<label kind="assignment">isScheduledCommunicationOfStatechartOfsatellite = true</label>
</transition>

<transition>
<source ref="Transmitting"/>
<target ref="exitOfTransmitting543"/>
<label kind="guard">batteryVariableOfsatellite &lt; 40</label>
<label kind="assignment">isScheduledCommunicationOfStatechartOfsatellite = true</label>
</transition>

<transition>
<source ref="exitOfTransmitting542"/>
<target ref="WaitingPing"/>
<label kind="synchronisation">exitChanOfTransmitting172!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="exitOfTransmitting543"/>
<target ref="WaitingPing"/>
<label kind="synchronisation">exitChanOfTransmitting172!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="FinalizeBeforeTransmitting20"/>
<target ref="entryOfTransmitting"/>
<label kind="synchronisation">finalize?</label>
<label kind="assignment"></label>
</transition>
</template>

<template>
<name>
ConsumePowerOfTransmittingOfsatellite
</name>
<declaration>
bool isActive;

clock timer16;
</declaration>
<location id="EntryLocation1">
<name>
EntryLocation1
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="GenInitLocation2">
<name>
GenInitLocation2
</name>
<label kind="comments">
Generated for the synchronization of subregions.
</label>
</location>

<location id="Consuming">
<name>
Consuming
</name>
<label kind="invariant">
timer16 &lt;= 1 * 1000
</label>
</location>

<location id="entryOfConsuming">
<name>
entryOfConsuming
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="timer17">
<name>
timer17
</name>
</location>
<init ref="GenInitLocation2"/>

<transition>
<source ref="entryOfConsuming"/>
<target ref="Consuming"/>
<label kind="assignment">timer16 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="timer17"/>
<target ref="entryOfConsuming"/>
<label kind="guard">(isActive &amp;&amp; batteryVariableOfsatellite >= 40)</label>
<label kind="synchronisation">runCycleConsumePowerOfTransmittingOfsatellite?</label>
<label kind="assignment">isScheduledConsumePowerOfTransmittingOfsatellite = true,
batteryVariableOfsatellite = batteryVariableOfsatellite - 1</label>
</transition>

<transition>
<source ref="EntryLocation1"/>
<target ref="entryOfConsuming"/>
<label kind="guard">isActive</label>
<label kind="assignment">isScheduledConsumePowerOfTransmittingOfsatellite = true</label>
</transition>

<transition>
<source ref="Consuming"/>
<target ref="timer17"/>
<label kind="guard">(isStable &amp;&amp; timer16 >= 1 * 1000)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="GenInitLocation2"/>
<target ref="EntryLocation1"/>
<label kind="synchronisation">entryChanOfTransmitting172?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Consuming"/>
<target ref="EntryLocation1"/>
<label kind="synchronisation">entryChanOfTransmitting172?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer17"/>
<target ref="EntryLocation1"/>
<label kind="synchronisation">entryChanOfTransmitting172?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="GenInitLocation2"/>
<target ref="GenInitLocation2"/>
<label kind="synchronisation">exitChanOfTransmitting172?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Consuming"/>
<target ref="GenInitLocation2"/>
<label kind="synchronisation">exitChanOfTransmitting172?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="timer17"/>
<target ref="GenInitLocation2"/>
<label kind="synchronisation">exitChanOfTransmitting172?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
ReceiveDataOfOperationOfstation
</name>
<declaration>
bool isActive;
</declaration>
<location id="EntryLocation5">
<name>
EntryLocation5
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="GenInitLocation6">
<name>
GenInitLocation6
</name>
<label kind="comments">
Generated for the synchronization of subregions.
</label>
</location>

<location id="Waiting">
<name>
Waiting
</name>
</location>
<init ref="GenInitLocation6"/>

<transition>
<source ref="EntryLocation5"/>
<target ref="Waiting"/>
<label kind="guard">isActive</label>
<label kind="assignment">isScheduledReceiveDataOfOperationOfstation = true</label>
</transition>

<transition>
<source ref="Waiting"/>
<target ref="Waiting"/>
<label kind="guard">(isActive &amp;&amp; isRaised_connection_dataOfstation)</label>
<label kind="synchronisation">runCycleReceiveDataOfOperationOfstation?</label>
<label kind="assignment">isScheduledReceiveDataOfOperationOfstation = true</label>
</transition>

<transition>
<source ref="GenInitLocation6"/>
<target ref="EntryLocation5"/>
<label kind="synchronisation">entryChanOfOperation173?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Waiting"/>
<target ref="EntryLocation5"/>
<label kind="synchronisation">entryChanOfOperation173?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="GenInitLocation6"/>
<target ref="GenInitLocation6"/>
<label kind="synchronisation">exitChanOfOperation173?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Waiting"/>
<target ref="GenInitLocation6"/>
<label kind="synchronisation">exitChanOfOperation173?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
MissionOrchestrator21
</name>
<declaration>
clock timerOrchestrator32;
</declaration>
<location id="InitLoc">
<name>
InitLoc
</name>
<label kind="invariant">
timerOrchestrator32 &lt;= 30000
</label>
</location>

<location id="swapLocation22">
<name>
swapLocation22
</name>
<urgent/>
</location>

<location id="RunMainOfStatechartOfstation23">
<name>
RunMainOfStatechartOfstation23
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunReceiveDataOfOperationOfstation24">
<name>
RunReceiveDataOfOperationOfstation24
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="finalizestation25">
<name>
finalizestation25
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunSendDataOfTransmittingOfsatellite26">
<name>
RunSendDataOfTransmittingOfsatellite26
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunConsumePowerOfTransmittingOfsatellite27">
<name>
RunConsumePowerOfTransmittingOfsatellite27
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunCommunicationOfStatechartOfsatellite28">
<name>
RunCommunicationOfStatechartOfsatellite28
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunBatteryOfStatechartOfsatellite29">
<name>
RunBatteryOfStatechartOfsatellite29
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="finalizesatellite30">
<name>
finalizesatellite30
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="final">
<name>
final
</name>
<label kind="comments">
To ensure all synchronizations to take place before an isStable state.
</label>
<urgent/>
</location>

<location id="notIsStable">
<name>
notIsStable
</name>
<urgent/>
</location>
<init ref="notIsStable"/>

<transition>
<source ref="InitLoc"/>
<target ref="swapLocation22"/>
<label kind="assignment">clearOutEvents31(),
isStable = false,
isScheduledSendDataOfTransmittingOfsatellite = false,
isScheduledBatteryOfStatechartOfsatellite = false,
isScheduledMainOfStatechartOfstation = false,
isScheduledCommunicationOfStatechartOfsatellite = false,
isScheduledReceiveDataOfOperationOfstation = false,
isScheduledConsumePowerOfTransmittingOfsatellite = false</label>
</transition>

<transition>
<source ref="swapLocation22"/>
<target ref="RunMainOfStatechartOfstation23"/>
<label kind="assignment">isRaised_control_startOfstation = toRaise_control_startOfstation,
toRaise_control_startOfstation = false,
isRaised_connection_dataOfstation = toRaise_connection_dataOfstation,
toRaise_connection_dataOfstation = false,
isRaised_control_shutdownOfstation = toRaise_control_shutdownOfstation,
toRaise_control_shutdownOfstation = false,
isRaised_connection_pingOfsatellite = toRaise_connection_pingOfsatellite,
toRaise_connection_pingOfsatellite = false</label>
</transition>

<transition>
<source ref="RunMainOfStatechartOfstation23"/>
<target ref="RunReceiveDataOfOperationOfstation24"/>
<label kind="synchronisation">runCycleMainOfStatechartOfstation!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunReceiveDataOfOperationOfstation24"/>
<target ref="finalizestation25"/>
<label kind="guard">!(isScheduledMainOfStatechartOfstation)</label>
<label kind="synchronisation">runCycleReceiveDataOfOperationOfstation!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunReceiveDataOfOperationOfstation24"/>
<target ref="finalizestation25"/>
<label kind="guard">isScheduledMainOfStatechartOfstation</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="finalizestation25"/>
<target ref="RunSendDataOfTransmittingOfsatellite26"/>
<label kind="synchronisation">finalize!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunSendDataOfTransmittingOfsatellite26"/>
<target ref="RunConsumePowerOfTransmittingOfsatellite27"/>
<label kind="synchronisation">runCycleSendDataOfTransmittingOfsatellite!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunConsumePowerOfTransmittingOfsatellite27"/>
<target ref="RunCommunicationOfStatechartOfsatellite28"/>
<label kind="synchronisation">runCycleConsumePowerOfTransmittingOfsatellite!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunCommunicationOfStatechartOfsatellite28"/>
<target ref="RunBatteryOfStatechartOfsatellite29"/>
<label kind="guard">!((isScheduledSendDataOfTransmittingOfsatellite || isScheduledConsumePowerOfTransmittingOfsatellite))</label>
<label kind="synchronisation">runCycleCommunicationOfStatechartOfsatellite!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunCommunicationOfStatechartOfsatellite28"/>
<target ref="RunBatteryOfStatechartOfsatellite29"/>
<label kind="guard">(isScheduledSendDataOfTransmittingOfsatellite || isScheduledConsumePowerOfTransmittingOfsatellite)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunBatteryOfStatechartOfsatellite29"/>
<target ref="finalizesatellite30"/>
<label kind="synchronisation">runCycleBatteryOfStatechartOfsatellite!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="finalizesatellite30"/>
<target ref="final"/>
<label kind="synchronisation">finalize!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="final"/>
<target ref="InitLoc"/>
<label kind="assignment">isStable = true,
timerOrchestrator32 = 0</label>
</transition>

<transition>
<source ref="notIsStable"/>
<target ref="InitLoc"/>
<label kind="assignment">isStable = true</label>
</transition>
</template>

<template>
<name>
Environment
</name>
<location id="InitLoc">
<name>
InitLoc
</name>
</location>
<init ref="InitLoc"/>

<transition>
<source ref="InitLoc"/>
<target ref="InitLoc"/>
<label kind="guard">(isStable &amp;&amp; !(toRaise_control_startOfstation))</label>
<label kind="assignment">toRaise_control_startOfstation = true</label>
</transition>

<transition>
<source ref="InitLoc"/>
<target ref="InitLoc"/>
<label kind="guard">(isStable &amp;&amp; !(toRaise_control_shutdownOfstation))</label>
<label kind="assignment">toRaise_control_shutdownOfstation = true</label>
</transition>
</template>
<system>
	P_MainOfStatechartOfstation = MainOfStatechartOfstation();
	
	P_SendDataOfTransmittingOfsatellite = SendDataOfTransmittingOfsatellite();
	
	P_BatteryOfStatechartOfsatellite = BatteryOfStatechartOfsatellite();
	
	P_CommunicationOfStatechartOfsatellite = CommunicationOfStatechartOfsatellite();
	
	P_ConsumePowerOfTransmittingOfsatellite = ConsumePowerOfTransmittingOfsatellite();
	
	P_ReceiveDataOfOperationOfstation = ReceiveDataOfOperationOfstation();
	
	P_MissionOrchestrator21 = MissionOrchestrator21();
	
	P_Environment = Environment();
	system P_MainOfStatechartOfstation, P_SendDataOfTransmittingOfsatellite, P_BatteryOfStatechartOfsatellite, P_CommunicationOfStatechartOfsatellite, P_ConsumePowerOfTransmittingOfsatellite, P_ReceiveDataOfOperationOfstation, P_MissionOrchestrator21, P_Environment;
</system>
	</nta>

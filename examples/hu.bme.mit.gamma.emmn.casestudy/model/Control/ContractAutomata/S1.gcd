package s1
import "/hu.bme.mit.gamma.emmn.casestudy/model/Interfaces/Interfaces.gcd"
import "/hu.bme.mit.gamma.emmn.casestudy/model/Control/Controller.gcd"
@TransitionPriority = value-based
@ScenarioContractStatechart = Controller (permissive)
statechart S1 [
	port Input : requires Input
	port InputReversed : provides Input
	port Output : provides Output
	port OutputReversed : requires Output
] {
	region ^region {
		initial Initial
		state state0
		state hotComponentViolation
		state state1
		state state2
	}
	transition from Initial to state0
	transition (4) from state0 to state1 when Input.a && !(Input.b)
	transition (1) from state0 to state0 when Input.a || Input.b
	transition from state0 to state0 when OutputReversed.x || OutputReversed.y
	transition (4) from state1 to state2 when Input.b && !(Input.a)
	transition (1) from state1 to state0 when Input.a || Input.b
	transition from state1 to state0 when OutputReversed.x || OutputReversed.y
	transition (3) from state1 to state1 when Input.a && !(Input.b)
	transition (4) from state2 to state0 when OutputReversed.x && !(OutputReversed.y)
	transition (1) from state2 to hotComponentViolation when OutputReversed.x || OutputReversed.y
	transition from state2 to state0 when Input.a || Input.b
	transition (3) from state2 to state1 when Input.a && !(Input.b)
}
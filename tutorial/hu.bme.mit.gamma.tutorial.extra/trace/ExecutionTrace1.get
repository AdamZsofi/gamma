import "/hu.bme.mit.gamma.tutorial.extra/model/.MonitoredCrossroad.gsm"
trace MonitoredCrossroadTrace of
MonitoredCrossroad
step {
	act {
		reset
	}
	assert {
		raise secondaryOutput.displayRed
		raise priorityOutput.displayRed
		crossroad_controller.Operating
		crossroad_controller.Init
		crossroad_prior.Normal
		crossroad_prior.Red
		crossroad_secondary.Normal
		crossroad_secondary.Red
		monitor.Other
	}
}
step {
	act {
		elapse 2000
		schedule component
	}
	assert {
		raise priorityOutput.displayGreen
		crossroad_controller.Operating
		crossroad_controller.PriorityPrepares
		crossroad_prior.Normal
		crossroad_prior.Green
		crossroad_secondary.Normal
		crossroad_secondary.Red
		monitor.Red
	}
}
step {
	act {
		elapse 1000
		schedule component
	}
	assert {
		raise priorityOutput.displayYellow
		crossroad_controller.Operating
		crossroad_controller.Secondary
		crossroad_prior.Normal
		crossroad_prior.Yellow
		crossroad_secondary.Normal
		crossroad_secondary.Red
		monitor.Green
	}
}
step {
	act {
		elapse 2000
		schedule component
	}
	assert {
		raise secondaryOutput.displayGreen
		raise priorityOutput.displayRed
		crossroad_controller.Operating
		crossroad_controller.SecondaryPrepares
		crossroad_prior.Normal
		crossroad_prior.Red
		crossroad_secondary.Normal
		crossroad_secondary.Green
		monitor.Other
	}
}
<nta>
<declaration>


bool isStable = false;

bool toRaise_PoliceInterrupt_policeOfprior;

bool isRaised_PoliceInterrupt_policeOfprior;

bool toRaise_PoliceInterrupt_policeOfsecondary;

bool isRaised_PoliceInterrupt_policeOfsecondary;

bool toRaise_Control_toggleOfsecondary;

bool isRaised_Control_toggleOfsecondary;

bool toRaise_PoliceInterrupt_policeOfcontroller;

bool isRaised_PoliceInterrupt_policeOfcontroller;

bool toRaise_Control_toggleOfprior;

bool isRaised_Control_toggleOfprior;

bool LightCommands_displayGreenOfsecondary;

bool LightCommands_displayRedOfsecondary;

bool LightCommands_displayYellowOfsecondary;

bool LightCommands_displayNoneOfsecondary;

bool LightCommands_displayYellowOfprior;

bool LightCommands_displayNoneOfprior;

bool LightCommands_displayRedOfprior;

bool LightCommands_displayGreenOfprior;

broadcast chan runCycleMain_regionOfStatechartOfcontroller;

bool isScheduledmain_regionOfStatechartOfcontrollerOfcontroller;

broadcast chan runCycleMain_regionOfStatechartOfprior;

bool isScheduledmain_regionOfStatechartOfpriorOfprior;

broadcast chan runCycleNormalOfNormalOfsecondary;

bool isSchedulednormalOfNormalOfsecondaryOfsecondary;

broadcast chan runCycleOperatingOfOperatingOfcontroller;

bool isScheduledoperatingOfOperatingOfcontrollerOfcontroller;

broadcast chan runCycleInterruptedOfInterruptedOfprior;

bool isScheduledinterruptedOfInterruptedOfpriorOfprior;

broadcast chan runCycleNormalOfNormalOfprior;

bool isSchedulednormalOfNormalOfpriorOfprior;

broadcast chan runCycleInterruptedOfInterruptedOfsecondary;

bool isScheduledinterruptedOfInterruptedOfsecondaryOfsecondary;

broadcast chan runCycleMain_regionOfStatechartOfsecondary;

bool isScheduledmain_regionOfStatechartOfsecondaryOfsecondary;

clock timer0;

bool BlackTimeout4ofsecondary = true;

clock timer1;

bool BlinkingYellowTimeout3ofprior = true;

clock timer2;

bool PriorityPreparesTimeout6ofcontroller = true;

bool SecondaryPreparesTimeout3ofcontroller = true;

bool BlinkingYellowTimeout3ofsecondary = true;

bool SecondaryTimeout2ofcontroller = true;

bool InitTimeout5ofcontroller = true;

bool BlackTimeout4ofprior = true;

bool PriorityTimeout4ofcontroller = true;

broadcast chan entryChanOfInterrupted20;

broadcast chan entryChanOfNormal21;

broadcast chan entryChanOfInterrupted22;

broadcast chan entryChanOfNormal23;

broadcast chan entryChanOfOperating24;

broadcast chan exitChanOfInterrupted20;

broadcast chan exitChanOfOperating21;

broadcast chan exitChanOfNormal22;

broadcast chan exitChanOfInterrupted23;

broadcast chan exitChanOfNormal24;

void clearOutEvents13() {
	LightCommands_displayNoneOfprior = false;
	LightCommands_displayYellowOfprior = false;
	LightCommands_displayRedOfsecondary = false;
	LightCommands_displayNoneOfsecondary = false;
	LightCommands_displayYellowOfsecondary = false;
	LightCommands_displayRedOfprior = false;
	LightCommands_displayGreenOfsecondary = false;
	LightCommands_displayGreenOfprior = false;
}

void resetClocks15() {
	if (((((InitTimeout5ofcontroller &amp;&amp; PriorityPreparesTimeout6ofcontroller) &amp;&amp; SecondaryTimeout2ofcontroller) &amp;&amp; SecondaryPreparesTimeout3ofcontroller) &amp;&amp; PriorityTimeout4ofcontroller))
		timer2 = 0;
	if ((BlackTimeout4ofprior &amp;&amp; BlinkingYellowTimeout3ofprior))
		timer1 = 0;
	if ((BlackTimeout4ofsecondary &amp;&amp; BlinkingYellowTimeout3ofsecondary))
		timer0 = 0;
}

</declaration>
<template>
<name>
main_regionOfStatechartOfcontroller
</name>
<location id="Entry0">
<name>
Entry0
</name>
<committed/>
</location>

<location id="Interrupted">
<name>
Interrupted
</name>
</location>

<location id="Operating">
<name>
Operating
</name>
</location>

<location id="entryOfOperating">
<name>
entryOfOperating
</name>
<committed/>
</location>

<location id="exitOfOperating21">
<name>
exitOfOperating21
</name>
<committed/>
</location>
<init ref="Entry0"/>

<transition>
<source ref="entryOfOperating"/>
<target ref="Operating"/>
<label kind="synchronisation">entryChanOfOperating24!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Operating"/>
<target ref="exitOfOperating21"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfcontroller</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfcontroller?</label>
<label kind="assignment">isScheduledmain_regionOfStatechartOfcontrollerOfcontroller = true,
toRaise_PoliceInterrupt_policeOfprior = true,
toRaise_PoliceInterrupt_policeOfsecondary = true</label>
</transition>

<transition>
<source ref="Entry0"/>
<target ref="entryOfOperating"/>
<label kind="assignment">isScheduledmain_regionOfStatechartOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="Interrupted"/>
<target ref="entryOfOperating"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfcontroller</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfcontroller?</label>
<label kind="assignment">isScheduledmain_regionOfStatechartOfcontrollerOfcontroller = true,
toRaise_PoliceInterrupt_policeOfprior = true,
toRaise_PoliceInterrupt_policeOfsecondary = true</label>
</transition>

<transition>
<source ref="exitOfOperating21"/>
<target ref="Interrupted"/>
<label kind="synchronisation">exitChanOfOperating21!</label>
<label kind="assignment"></label>
</transition>
</template>

<template>
<name>
main_regionOfStatechartOfprior
</name>
<location id="Entry0">
<name>
Entry0
</name>
<committed/>
</location>

<location id="Interrupted">
<name>
Interrupted
</name>
</location>

<location id="entryOfInterrupted">
<name>
entryOfInterrupted
</name>
<committed/>
</location>

<location id="Normal">
<name>
Normal
</name>
</location>

<location id="entryOfNormal">
<name>
entryOfNormal
</name>
<committed/>
</location>

<location id="exitOfInterrupted20">
<name>
exitOfInterrupted20
</name>
<committed/>
</location>

<location id="exitOfNormal24">
<name>
exitOfNormal24
</name>
<committed/>
</location>
<init ref="Entry0"/>

<transition>
<source ref="entryOfInterrupted"/>
<target ref="Interrupted"/>
<label kind="synchronisation">entryChanOfInterrupted20!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="entryOfNormal"/>
<target ref="Normal"/>
<label kind="synchronisation">entryChanOfNormal23!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Normal"/>
<target ref="exitOfNormal24"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfprior</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfprior?</label>
<label kind="assignment">isScheduledmain_regionOfStatechartOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="Interrupted"/>
<target ref="exitOfInterrupted20"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfprior</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfprior?</label>
<label kind="assignment">isScheduledmain_regionOfStatechartOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="Entry0"/>
<target ref="entryOfNormal"/>
<label kind="assignment">isScheduledmain_regionOfStatechartOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="exitOfInterrupted20"/>
<target ref="entryOfNormal"/>
<label kind="synchronisation">exitChanOfInterrupted20!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="exitOfNormal24"/>
<target ref="entryOfInterrupted"/>
<label kind="synchronisation">exitChanOfNormal24!</label>
<label kind="assignment"></label>
</transition>
</template>

<template>
<name>
normalOfNormalOfsecondary
</name>
<declaration>
bool isActive;
</declaration>
<location id="Entry2">
<name>
Entry2
</name>
<committed/>
</location>

<location id="GenInitLocation5">
<name>
GenInitLocation5
</name>
</location>

<location id="Green">
<name>
Green
</name>
</location>

<location id="entryOfGreen">
<name>
entryOfGreen
</name>
<committed/>
</location>

<location id="Yellow">
<name>
Yellow
</name>
</location>

<location id="entryOfYellow">
<name>
entryOfYellow
</name>
<committed/>
</location>

<location id="Red">
<name>
Red
</name>
</location>

<location id="entryOfRed">
<name>
entryOfRed
</name>
<committed/>
</location>
<init ref="GenInitLocation5"/>

<transition>
<source ref="entryOfGreen"/>
<target ref="Green"/>
<label kind="assignment">LightCommands_displayGreenOfsecondary = true</label>
</transition>

<transition>
<source ref="entryOfYellow"/>
<target ref="Yellow"/>
<label kind="assignment">LightCommands_displayYellowOfsecondary = true</label>
</transition>

<transition>
<source ref="entryOfRed"/>
<target ref="Red"/>
<label kind="assignment">LightCommands_displayRedOfsecondary = true</label>
</transition>

<transition>
<source ref="Green"/>
<target ref="entryOfYellow"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfsecondary)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfsecondary?</label>
<label kind="assignment">isSchedulednormalOfNormalOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="Red"/>
<target ref="entryOfGreen"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfsecondary)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfsecondary?</label>
<label kind="assignment">isSchedulednormalOfNormalOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="Entry2"/>
<target ref="entryOfRed"/>
<label kind="guard">isActive</label>
<label kind="assignment">isSchedulednormalOfNormalOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="entryOfRed"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfsecondary)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfsecondary?</label>
<label kind="assignment">isSchedulednormalOfNormalOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="GenInitLocation5"/>
<target ref="Entry2"/>
<label kind="synchronisation">entryChanOfNormal21?</label>
<label kind="assignment">isActive = true,
isSchedulednormalOfNormalOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="Green"/>
<target ref="entryOfGreen"/>
<label kind="synchronisation">entryChanOfNormal21?</label>
<label kind="assignment">isActive = true,
isSchedulednormalOfNormalOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="Red"/>
<target ref="entryOfRed"/>
<label kind="synchronisation">entryChanOfNormal21?</label>
<label kind="assignment">isActive = true,
isSchedulednormalOfNormalOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="entryOfYellow"/>
<label kind="synchronisation">entryChanOfNormal21?</label>
<label kind="assignment">isActive = true,
isSchedulednormalOfNormalOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="GenInitLocation5"/>
<target ref="GenInitLocation5"/>
<label kind="synchronisation">exitChanOfNormal22?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Green"/>
<target ref="Green"/>
<label kind="synchronisation">exitChanOfNormal22?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Red"/>
<target ref="Red"/>
<label kind="synchronisation">exitChanOfNormal22?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="Yellow"/>
<label kind="synchronisation">exitChanOfNormal22?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
operatingOfOperatingOfcontroller
</name>
<declaration>
bool isActive;
</declaration>
<location id="Entry1">
<name>
Entry1
</name>
<committed/>
</location>

<location id="GenInitLocation3">
<name>
GenInitLocation3
</name>
</location>

<location id="PriorityPrepares">
<name>
PriorityPrepares
</name>
</location>

<location id="entryOfPriorityPrepares">
<name>
entryOfPriorityPrepares
</name>
<committed/>
</location>

<location id="Priority">
<name>
Priority
</name>
</location>

<location id="entryOfPriority">
<name>
entryOfPriority
</name>
<committed/>
</location>

<location id="Secondary">
<name>
Secondary
</name>
</location>

<location id="entryOfSecondary">
<name>
entryOfSecondary
</name>
<committed/>
</location>

<location id="Init">
<name>
Init
</name>
</location>

<location id="entryOfInit">
<name>
entryOfInit
</name>
<committed/>
</location>

<location id="SecondaryPrepares">
<name>
SecondaryPrepares
</name>
</location>

<location id="entryOfSecondaryPrepares">
<name>
entryOfSecondaryPrepares
</name>
<committed/>
</location>
<init ref="GenInitLocation3"/>

<transition>
<source ref="entryOfPriorityPrepares"/>
<target ref="PriorityPrepares"/>
<label kind="assignment">toRaise_Control_toggleOfprior = true,
timer2 = 0,
PriorityPreparesTimeout6ofcontroller = false</label>
</transition>

<transition>
<source ref="entryOfPriority"/>
<target ref="Priority"/>
<label kind="assignment">toRaise_Control_toggleOfsecondary = true,
toRaise_Control_toggleOfprior = true,
timer2 = 0,
PriorityTimeout4ofcontroller = false</label>
</transition>

<transition>
<source ref="entryOfSecondary"/>
<target ref="Secondary"/>
<label kind="assignment">toRaise_Control_toggleOfprior = true,
toRaise_Control_toggleOfsecondary = true,
timer2 = 0,
SecondaryTimeout2ofcontroller = false</label>
</transition>

<transition>
<source ref="entryOfInit"/>
<target ref="Init"/>
<label kind="assignment">toRaise_Control_toggleOfprior = true,
timer2 = 0,
InitTimeout5ofcontroller = false</label>
</transition>

<transition>
<source ref="entryOfSecondaryPrepares"/>
<target ref="SecondaryPrepares"/>
<label kind="assignment">toRaise_Control_toggleOfsecondary = true,
timer2 = 0,
SecondaryPreparesTimeout3ofcontroller = false</label>
</transition>

<transition>
<source ref="PriorityPrepares"/>
<target ref="entryOfSecondary"/>
<label kind="guard">(isActive &amp;&amp; PriorityPreparesTimeout6ofcontroller)</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller?</label>
<label kind="assignment">isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="Entry1"/>
<target ref="entryOfInit"/>
<label kind="guard">isActive</label>
<label kind="assignment">isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="SecondaryPrepares"/>
<target ref="entryOfPriority"/>
<label kind="guard">(isActive &amp;&amp; SecondaryPreparesTimeout3ofcontroller)</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller?</label>
<label kind="assignment">isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="Secondary"/>
<target ref="entryOfSecondaryPrepares"/>
<label kind="guard">(isActive &amp;&amp; SecondaryTimeout2ofcontroller)</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller?</label>
<label kind="assignment">isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="Priority"/>
<target ref="entryOfPriorityPrepares"/>
<label kind="guard">(isActive &amp;&amp; PriorityTimeout4ofcontroller)</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller?</label>
<label kind="assignment">isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="Init"/>
<target ref="entryOfPriorityPrepares"/>
<label kind="guard">(isActive &amp;&amp; InitTimeout5ofcontroller)</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller?</label>
<label kind="assignment">isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="Secondary"/>
<target ref="entryOfSecondary"/>
<label kind="synchronisation">entryChanOfOperating24?</label>
<label kind="assignment">isActive = true,
isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="PriorityPrepares"/>
<target ref="entryOfPriorityPrepares"/>
<label kind="synchronisation">entryChanOfOperating24?</label>
<label kind="assignment">isActive = true,
isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="GenInitLocation3"/>
<target ref="Entry1"/>
<label kind="synchronisation">entryChanOfOperating24?</label>
<label kind="assignment">isActive = true,
isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="Priority"/>
<target ref="entryOfPriority"/>
<label kind="synchronisation">entryChanOfOperating24?</label>
<label kind="assignment">isActive = true,
isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="Init"/>
<target ref="entryOfInit"/>
<label kind="synchronisation">entryChanOfOperating24?</label>
<label kind="assignment">isActive = true,
isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="SecondaryPrepares"/>
<target ref="entryOfSecondaryPrepares"/>
<label kind="synchronisation">entryChanOfOperating24?</label>
<label kind="assignment">isActive = true,
isScheduledoperatingOfOperatingOfcontrollerOfcontroller = true</label>
</transition>

<transition>
<source ref="Secondary"/>
<target ref="Secondary"/>
<label kind="synchronisation">exitChanOfOperating21?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="PriorityPrepares"/>
<target ref="PriorityPrepares"/>
<label kind="synchronisation">exitChanOfOperating21?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="GenInitLocation3"/>
<target ref="GenInitLocation3"/>
<label kind="synchronisation">exitChanOfOperating21?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Priority"/>
<target ref="Priority"/>
<label kind="synchronisation">exitChanOfOperating21?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Init"/>
<target ref="Init"/>
<label kind="synchronisation">exitChanOfOperating21?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="SecondaryPrepares"/>
<target ref="SecondaryPrepares"/>
<label kind="synchronisation">exitChanOfOperating21?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
interruptedOfInterruptedOfprior
</name>
<declaration>
bool isActive;
</declaration>
<location id="Entry1">
<name>
Entry1
</name>
<committed/>
</location>

<location id="GenInitLocation6">
<name>
GenInitLocation6
</name>
</location>

<location id="BlinkingYellow">
<name>
BlinkingYellow
</name>
</location>

<location id="entryOfBlinkingYellow">
<name>
entryOfBlinkingYellow
</name>
<committed/>
</location>

<location id="Black">
<name>
Black
</name>
</location>

<location id="entryOfBlack">
<name>
entryOfBlack
</name>
<committed/>
</location>
<init ref="GenInitLocation6"/>

<transition>
<source ref="entryOfBlinkingYellow"/>
<target ref="BlinkingYellow"/>
<label kind="assignment">LightCommands_displayYellowOfprior = true,
timer1 = 0,
BlinkingYellowTimeout3ofprior = false</label>
</transition>

<transition>
<source ref="entryOfBlack"/>
<target ref="Black"/>
<label kind="assignment">LightCommands_displayNoneOfprior = true,
timer1 = 0,
BlackTimeout4ofprior = false</label>
</transition>

<transition>
<source ref="Black"/>
<target ref="entryOfBlinkingYellow"/>
<label kind="guard">(isActive &amp;&amp; BlackTimeout4ofprior)</label>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfprior?</label>
<label kind="assignment">isScheduledinterruptedOfInterruptedOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="Entry1"/>
<target ref="entryOfBlinkingYellow"/>
<label kind="guard">isActive</label>
<label kind="assignment">isScheduledinterruptedOfInterruptedOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="entryOfBlack"/>
<label kind="guard">(isActive &amp;&amp; BlinkingYellowTimeout3ofprior)</label>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfprior?</label>
<label kind="assignment">isScheduledinterruptedOfInterruptedOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="Black"/>
<target ref="Entry1"/>
<label kind="synchronisation">entryChanOfInterrupted20?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="GenInitLocation6"/>
<target ref="Entry1"/>
<label kind="synchronisation">entryChanOfInterrupted20?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="Entry1"/>
<label kind="synchronisation">entryChanOfInterrupted20?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Black"/>
<target ref="GenInitLocation6"/>
<label kind="synchronisation">exitChanOfInterrupted20?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="GenInitLocation6"/>
<target ref="GenInitLocation6"/>
<label kind="synchronisation">exitChanOfInterrupted20?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="GenInitLocation6"/>
<label kind="synchronisation">exitChanOfInterrupted20?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
normalOfNormalOfprior
</name>
<declaration>
bool isActive;
</declaration>
<location id="Entry2">
<name>
Entry2
</name>
<committed/>
</location>

<location id="GenInitLocation4">
<name>
GenInitLocation4
</name>
</location>

<location id="Red">
<name>
Red
</name>
</location>

<location id="entryOfRed">
<name>
entryOfRed
</name>
<committed/>
</location>

<location id="Yellow">
<name>
Yellow
</name>
</location>

<location id="entryOfYellow">
<name>
entryOfYellow
</name>
<committed/>
</location>

<location id="Green">
<name>
Green
</name>
</location>

<location id="entryOfGreen">
<name>
entryOfGreen
</name>
<committed/>
</location>
<init ref="GenInitLocation4"/>

<transition>
<source ref="entryOfRed"/>
<target ref="Red"/>
<label kind="assignment">LightCommands_displayRedOfprior = true</label>
</transition>

<transition>
<source ref="entryOfYellow"/>
<target ref="Yellow"/>
<label kind="assignment">LightCommands_displayYellowOfprior = true</label>
</transition>

<transition>
<source ref="entryOfGreen"/>
<target ref="Green"/>
<label kind="assignment">LightCommands_displayGreenOfprior = true</label>
</transition>

<transition>
<source ref="Red"/>
<target ref="entryOfGreen"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfprior)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfprior?</label>
<label kind="assignment">isSchedulednormalOfNormalOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="Entry2"/>
<target ref="entryOfRed"/>
<label kind="guard">isActive</label>
<label kind="assignment">isSchedulednormalOfNormalOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="entryOfRed"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfprior)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfprior?</label>
<label kind="assignment">isSchedulednormalOfNormalOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="Green"/>
<target ref="entryOfYellow"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfprior)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfprior?</label>
<label kind="assignment">isSchedulednormalOfNormalOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="GenInitLocation4"/>
<target ref="Entry2"/>
<label kind="synchronisation">entryChanOfNormal23?</label>
<label kind="assignment">isActive = true,
isSchedulednormalOfNormalOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="Green"/>
<target ref="entryOfGreen"/>
<label kind="synchronisation">entryChanOfNormal23?</label>
<label kind="assignment">isActive = true,
isSchedulednormalOfNormalOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="entryOfYellow"/>
<label kind="synchronisation">entryChanOfNormal23?</label>
<label kind="assignment">isActive = true,
isSchedulednormalOfNormalOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="Red"/>
<target ref="entryOfRed"/>
<label kind="synchronisation">entryChanOfNormal23?</label>
<label kind="assignment">isActive = true,
isSchedulednormalOfNormalOfpriorOfprior = true</label>
</transition>

<transition>
<source ref="GenInitLocation4"/>
<target ref="GenInitLocation4"/>
<label kind="synchronisation">exitChanOfNormal24?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Green"/>
<target ref="Green"/>
<label kind="synchronisation">exitChanOfNormal24?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="Yellow"/>
<label kind="synchronisation">exitChanOfNormal24?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Red"/>
<target ref="Red"/>
<label kind="synchronisation">exitChanOfNormal24?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
interruptedOfInterruptedOfsecondary
</name>
<declaration>
bool isActive;
</declaration>
<location id="Entry1">
<name>
Entry1
</name>
<committed/>
</location>

<location id="GenInitLocation7">
<name>
GenInitLocation7
</name>
</location>

<location id="BlinkingYellow">
<name>
BlinkingYellow
</name>
</location>

<location id="entryOfBlinkingYellow">
<name>
entryOfBlinkingYellow
</name>
<committed/>
</location>

<location id="Black">
<name>
Black
</name>
</location>

<location id="entryOfBlack">
<name>
entryOfBlack
</name>
<committed/>
</location>
<init ref="GenInitLocation7"/>

<transition>
<source ref="entryOfBlinkingYellow"/>
<target ref="BlinkingYellow"/>
<label kind="assignment">LightCommands_displayYellowOfsecondary = true,
timer0 = 0,
BlinkingYellowTimeout3ofsecondary = false</label>
</transition>

<transition>
<source ref="entryOfBlack"/>
<target ref="Black"/>
<label kind="assignment">LightCommands_displayNoneOfsecondary = true,
timer0 = 0,
BlackTimeout4ofsecondary = false</label>
</transition>

<transition>
<source ref="Black"/>
<target ref="entryOfBlinkingYellow"/>
<label kind="guard">(isActive &amp;&amp; BlackTimeout4ofsecondary)</label>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfsecondary?</label>
<label kind="assignment">isScheduledinterruptedOfInterruptedOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="entryOfBlack"/>
<label kind="guard">(isActive &amp;&amp; BlinkingYellowTimeout3ofsecondary)</label>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfsecondary?</label>
<label kind="assignment">isScheduledinterruptedOfInterruptedOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="Entry1"/>
<target ref="entryOfBlinkingYellow"/>
<label kind="guard">isActive</label>
<label kind="assignment">isScheduledinterruptedOfInterruptedOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="GenInitLocation7"/>
<target ref="Entry1"/>
<label kind="synchronisation">entryChanOfInterrupted22?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Black"/>
<target ref="Entry1"/>
<label kind="synchronisation">entryChanOfInterrupted22?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="Entry1"/>
<label kind="synchronisation">entryChanOfInterrupted22?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="GenInitLocation7"/>
<target ref="GenInitLocation7"/>
<label kind="synchronisation">exitChanOfInterrupted23?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Black"/>
<target ref="GenInitLocation7"/>
<label kind="synchronisation">exitChanOfInterrupted23?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="GenInitLocation7"/>
<label kind="synchronisation">exitChanOfInterrupted23?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
main_regionOfStatechartOfsecondary
</name>
<location id="Entry0">
<name>
Entry0
</name>
<committed/>
</location>

<location id="Normal">
<name>
Normal
</name>
</location>

<location id="entryOfNormal">
<name>
entryOfNormal
</name>
<committed/>
</location>

<location id="Interrupted">
<name>
Interrupted
</name>
</location>

<location id="entryOfInterrupted">
<name>
entryOfInterrupted
</name>
<committed/>
</location>

<location id="exitOfNormal22">
<name>
exitOfNormal22
</name>
<committed/>
</location>

<location id="exitOfInterrupted23">
<name>
exitOfInterrupted23
</name>
<committed/>
</location>
<init ref="Entry0"/>

<transition>
<source ref="entryOfNormal"/>
<target ref="Normal"/>
<label kind="synchronisation">entryChanOfNormal21!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="entryOfInterrupted"/>
<target ref="Interrupted"/>
<label kind="synchronisation">entryChanOfInterrupted22!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Interrupted"/>
<target ref="exitOfInterrupted23"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfsecondary</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfsecondary?</label>
<label kind="assignment">isScheduledmain_regionOfStatechartOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="Normal"/>
<target ref="exitOfNormal22"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfsecondary</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfsecondary?</label>
<label kind="assignment">isScheduledmain_regionOfStatechartOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="Entry0"/>
<target ref="entryOfNormal"/>
<label kind="assignment">isScheduledmain_regionOfStatechartOfsecondaryOfsecondary = true</label>
</transition>

<transition>
<source ref="exitOfNormal22"/>
<target ref="entryOfInterrupted"/>
<label kind="synchronisation">exitChanOfNormal22!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="exitOfInterrupted23"/>
<target ref="entryOfNormal"/>
<label kind="synchronisation">exitChanOfInterrupted23!</label>
<label kind="assignment"></label>
</transition>
</template>

<template>
<name>
ClockTemplate
</name>
<location id="initLoc">
<name>
initLoc
</name>
<label kind="invariant">
(((((((((SecondaryPreparesTimeout3ofcontroller || (timer2 &lt;= (1 * 1000))) &amp;&amp; (SecondaryTimeout2ofcontroller || (timer2 &lt;= (2 * 1000)))) &amp;&amp; (InitTimeout5ofcontroller || (timer2 &lt;= (2 * 1000)))) &amp;&amp; (PriorityTimeout4ofcontroller || (timer2 &lt;= (2 * 1000)))) &amp;&amp; (BlinkingYellowTimeout3ofsecondary || (timer0 &lt;= 500))) &amp;&amp; (BlackTimeout4ofprior || (timer1 &lt;= 500))) &amp;&amp; (BlackTimeout4ofsecondary || (timer0 &lt;= 500))) &amp;&amp; (PriorityPreparesTimeout6ofcontroller || (timer2 &lt;= (1 * 1000)))) &amp;&amp; (BlinkingYellowTimeout3ofprior || (timer1 &lt;= 500)))
</label>
</location>
<init ref="initLoc"/>

<transition>
<source ref="initLoc"/>
<target ref="initLoc"/>
<label kind="guard">(isStable &amp;&amp; (!(SecondaryPreparesTimeout3ofcontroller) &amp;&amp; (timer2 >= (1 * 1000))))</label>
<label kind="assignment">SecondaryPreparesTimeout3ofcontroller = true</label>
</transition>

<transition>
<source ref="initLoc"/>
<target ref="initLoc"/>
<label kind="guard">(isStable &amp;&amp; (!(SecondaryTimeout2ofcontroller) &amp;&amp; (timer2 >= (2 * 1000))))</label>
<label kind="assignment">SecondaryTimeout2ofcontroller = true</label>
</transition>

<transition>
<source ref="initLoc"/>
<target ref="initLoc"/>
<label kind="guard">(isStable &amp;&amp; (!(InitTimeout5ofcontroller) &amp;&amp; (timer2 >= (2 * 1000))))</label>
<label kind="assignment">InitTimeout5ofcontroller = true</label>
</transition>

<transition>
<source ref="initLoc"/>
<target ref="initLoc"/>
<label kind="guard">(isStable &amp;&amp; (!(PriorityTimeout4ofcontroller) &amp;&amp; (timer2 >= (2 * 1000))))</label>
<label kind="assignment">PriorityTimeout4ofcontroller = true</label>
</transition>

<transition>
<source ref="initLoc"/>
<target ref="initLoc"/>
<label kind="guard">(isStable &amp;&amp; (!(BlinkingYellowTimeout3ofsecondary) &amp;&amp; (timer0 >= 500)))</label>
<label kind="assignment">BlinkingYellowTimeout3ofsecondary = true</label>
</transition>

<transition>
<source ref="initLoc"/>
<target ref="initLoc"/>
<label kind="guard">(isStable &amp;&amp; (!(BlackTimeout4ofprior) &amp;&amp; (timer1 >= 500)))</label>
<label kind="assignment">BlackTimeout4ofprior = true</label>
</transition>

<transition>
<source ref="initLoc"/>
<target ref="initLoc"/>
<label kind="guard">(isStable &amp;&amp; (!(BlackTimeout4ofsecondary) &amp;&amp; (timer0 >= 500)))</label>
<label kind="assignment">BlackTimeout4ofsecondary = true</label>
</transition>

<transition>
<source ref="initLoc"/>
<target ref="initLoc"/>
<label kind="guard">(isStable &amp;&amp; (!(PriorityPreparesTimeout6ofcontroller) &amp;&amp; (timer2 >= (1 * 1000))))</label>
<label kind="assignment">PriorityPreparesTimeout6ofcontroller = true</label>
</transition>

<transition>
<source ref="initLoc"/>
<target ref="initLoc"/>
<label kind="guard">(isStable &amp;&amp; (!(BlinkingYellowTimeout3ofprior) &amp;&amp; (timer1 >= 500)))</label>
<label kind="assignment">BlinkingYellowTimeout3ofprior = true</label>
</transition>
</template>

<template>
<name>
CrossroadOrchestrator0
</name>
<declaration>
clock timerOrchestrator14;
</declaration>
<location id="InitLoc">
<name>
InitLoc
</name>
<label kind="invariant">
(timerOrchestrator14 &lt;= 2000)
</label>
</location>

<location id="swapLocation1">
<name>
swapLocation1
</name>
<urgent/>
</location>

<location id="RunMain_regionOfStatechartOfcontroller2">
<name>
RunMain_regionOfStatechartOfcontroller2
</name>
<urgent/>
</location>

<location id="RunOperatingOfOperatingOfcontroller3">
<name>
RunOperatingOfOperatingOfcontroller3
</name>
<urgent/>
</location>

<location id="finalizing4controller">
<name>
finalizing4controller
</name>
<urgent/>
</location>

<location id="RunMain_regionOfStatechartOfprior5">
<name>
RunMain_regionOfStatechartOfprior5
</name>
<urgent/>
</location>

<location id="RunNormalOfNormalOfprior6">
<name>
RunNormalOfNormalOfprior6
</name>
<urgent/>
</location>

<location id="RunInterruptedOfInterruptedOfprior7">
<name>
RunInterruptedOfInterruptedOfprior7
</name>
<urgent/>
</location>

<location id="finalizing8prior">
<name>
finalizing8prior
</name>
<urgent/>
</location>

<location id="RunMain_regionOfStatechartOfsecondary9">
<name>
RunMain_regionOfStatechartOfsecondary9
</name>
<urgent/>
</location>

<location id="RunNormalOfNormalOfsecondary10">
<name>
RunNormalOfNormalOfsecondary10
</name>
<urgent/>
</location>

<location id="RunInterruptedOfInterruptedOfsecondary11">
<name>
RunInterruptedOfInterruptedOfsecondary11
</name>
<urgent/>
</location>

<location id="finalizing12secondary">
<name>
finalizing12secondary
</name>
<urgent/>
</location>

<location id="final">
<name>
final
</name>
<urgent/>
</location>

<location id="notIsStable">
<name>
notIsStable
</name>
<urgent/>
</location>
<init ref="notIsStable"/>

<transition>
<source ref="InitLoc"/>
<target ref="swapLocation1"/>
<label kind="assignment">clearOutEvents13(),
isStable = false,
isScheduledinterruptedOfInterruptedOfsecondaryOfsecondary = false,
isScheduledmain_regionOfStatechartOfpriorOfprior = false,
isScheduledmain_regionOfStatechartOfsecondaryOfsecondary = false,
isScheduledinterruptedOfInterruptedOfpriorOfprior = false,
isScheduledoperatingOfOperatingOfcontrollerOfcontroller = false,
isScheduledmain_regionOfStatechartOfcontrollerOfcontroller = false,
isSchedulednormalOfNormalOfpriorOfprior = false,
isSchedulednormalOfNormalOfsecondaryOfsecondary = false,
timerOrchestrator14 = 0,
resetClocks15()</label>
</transition>

<transition>
<source ref="swapLocation1"/>
<target ref="RunMain_regionOfStatechartOfcontroller2"/>
<label kind="assignment">isRaised_PoliceInterrupt_policeOfcontroller = toRaise_PoliceInterrupt_policeOfcontroller,
toRaise_PoliceInterrupt_policeOfcontroller = false,
isRaised_Control_toggleOfsecondary = toRaise_Control_toggleOfsecondary,
toRaise_Control_toggleOfsecondary = false,
isRaised_PoliceInterrupt_policeOfsecondary = toRaise_PoliceInterrupt_policeOfsecondary,
toRaise_PoliceInterrupt_policeOfsecondary = false,
isRaised_Control_toggleOfprior = toRaise_Control_toggleOfprior,
toRaise_Control_toggleOfprior = false,
isRaised_PoliceInterrupt_policeOfprior = toRaise_PoliceInterrupt_policeOfprior,
toRaise_PoliceInterrupt_policeOfprior = false</label>
</transition>

<transition>
<source ref="RunMain_regionOfStatechartOfcontroller2"/>
<target ref="RunOperatingOfOperatingOfcontroller3"/>
<label kind="guard">!(isScheduledmain_regionOfStatechartOfcontrollerOfcontroller)</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfcontroller!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunMain_regionOfStatechartOfcontroller2"/>
<target ref="RunOperatingOfOperatingOfcontroller3"/>
<label kind="guard">isScheduledmain_regionOfStatechartOfcontrollerOfcontroller</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunOperatingOfOperatingOfcontroller3"/>
<target ref="finalizing4controller"/>
<label kind="guard">!((isScheduledmain_regionOfStatechartOfcontrollerOfcontroller || isScheduledoperatingOfOperatingOfcontrollerOfcontroller))</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunOperatingOfOperatingOfcontroller3"/>
<target ref="finalizing4controller"/>
<label kind="guard">(isScheduledmain_regionOfStatechartOfcontrollerOfcontroller || isScheduledoperatingOfOperatingOfcontrollerOfcontroller)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="finalizing4controller"/>
<target ref="RunMain_regionOfStatechartOfprior5"/>
<label kind="assignment">isRaised_PoliceInterrupt_policeOfcontroller = false</label>
</transition>

<transition>
<source ref="RunMain_regionOfStatechartOfprior5"/>
<target ref="RunNormalOfNormalOfprior6"/>
<label kind="guard">!(isScheduledmain_regionOfStatechartOfpriorOfprior)</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfprior!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunMain_regionOfStatechartOfprior5"/>
<target ref="RunNormalOfNormalOfprior6"/>
<label kind="guard">isScheduledmain_regionOfStatechartOfpriorOfprior</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunNormalOfNormalOfprior6"/>
<target ref="RunInterruptedOfInterruptedOfprior7"/>
<label kind="guard">!((isScheduledmain_regionOfStatechartOfpriorOfprior || isSchedulednormalOfNormalOfpriorOfprior))</label>
<label kind="synchronisation">runCycleNormalOfNormalOfprior!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunNormalOfNormalOfprior6"/>
<target ref="RunInterruptedOfInterruptedOfprior7"/>
<label kind="guard">(isScheduledmain_regionOfStatechartOfpriorOfprior || isSchedulednormalOfNormalOfpriorOfprior)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunInterruptedOfInterruptedOfprior7"/>
<target ref="finalizing8prior"/>
<label kind="guard">!((isScheduledmain_regionOfStatechartOfpriorOfprior || isScheduledinterruptedOfInterruptedOfpriorOfprior))</label>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfprior!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunInterruptedOfInterruptedOfprior7"/>
<target ref="finalizing8prior"/>
<label kind="guard">(isScheduledmain_regionOfStatechartOfpriorOfprior || isScheduledinterruptedOfInterruptedOfpriorOfprior)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="finalizing8prior"/>
<target ref="RunMain_regionOfStatechartOfsecondary9"/>
<label kind="assignment">isRaised_Control_toggleOfprior = false,
isRaised_PoliceInterrupt_policeOfprior = false</label>
</transition>

<transition>
<source ref="RunMain_regionOfStatechartOfsecondary9"/>
<target ref="RunNormalOfNormalOfsecondary10"/>
<label kind="guard">!(isScheduledmain_regionOfStatechartOfsecondaryOfsecondary)</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfsecondary!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunMain_regionOfStatechartOfsecondary9"/>
<target ref="RunNormalOfNormalOfsecondary10"/>
<label kind="guard">isScheduledmain_regionOfStatechartOfsecondaryOfsecondary</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunNormalOfNormalOfsecondary10"/>
<target ref="RunInterruptedOfInterruptedOfsecondary11"/>
<label kind="guard">!((isScheduledmain_regionOfStatechartOfsecondaryOfsecondary || isSchedulednormalOfNormalOfsecondaryOfsecondary))</label>
<label kind="synchronisation">runCycleNormalOfNormalOfsecondary!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunNormalOfNormalOfsecondary10"/>
<target ref="RunInterruptedOfInterruptedOfsecondary11"/>
<label kind="guard">(isScheduledmain_regionOfStatechartOfsecondaryOfsecondary || isSchedulednormalOfNormalOfsecondaryOfsecondary)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunInterruptedOfInterruptedOfsecondary11"/>
<target ref="finalizing12secondary"/>
<label kind="guard">!((isScheduledmain_regionOfStatechartOfsecondaryOfsecondary || isScheduledinterruptedOfInterruptedOfsecondaryOfsecondary))</label>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfsecondary!</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="RunInterruptedOfInterruptedOfsecondary11"/>
<target ref="finalizing12secondary"/>
<label kind="guard">(isScheduledmain_regionOfStatechartOfsecondaryOfsecondary || isScheduledinterruptedOfInterruptedOfsecondaryOfsecondary)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="finalizing12secondary"/>
<target ref="final"/>
<label kind="assignment">isRaised_Control_toggleOfsecondary = false,
isRaised_PoliceInterrupt_policeOfsecondary = false</label>
</transition>

<transition>
<source ref="final"/>
<target ref="InitLoc"/>
<label kind="assignment">isStable = true</label>
</transition>

<transition>
<source ref="notIsStable"/>
<target ref="InitLoc"/>
<label kind="assignment">isStable = true</label>
</transition>
</template>

<template>
<name>
Environment
</name>
<location id="InitLoc">
<name>
InitLoc
</name>
</location>
<init ref="InitLoc"/>

<transition>
<source ref="InitLoc"/>
<target ref="InitLoc"/>
<label kind="guard">(isStable &amp;&amp; !(toRaise_PoliceInterrupt_policeOfcontroller))</label>
<label kind="assignment">toRaise_PoliceInterrupt_policeOfcontroller = true</label>
</transition>
</template>
<system>
	P_main_regionOfStatechartOfcontroller = main_regionOfStatechartOfcontroller();
	
	P_main_regionOfStatechartOfprior = main_regionOfStatechartOfprior();
	
	P_normalOfNormalOfsecondary = normalOfNormalOfsecondary();
	
	P_operatingOfOperatingOfcontroller = operatingOfOperatingOfcontroller();
	
	P_interruptedOfInterruptedOfprior = interruptedOfInterruptedOfprior();
	
	P_normalOfNormalOfprior = normalOfNormalOfprior();
	
	P_interruptedOfInterruptedOfsecondary = interruptedOfInterruptedOfsecondary();
	
	P_main_regionOfStatechartOfsecondary = main_regionOfStatechartOfsecondary();
	
	P_ClockTemplate = ClockTemplate();
	
	P_CrossroadOrchestrator0 = CrossroadOrchestrator0();
	
	P_Environment = Environment();
	system P_main_regionOfStatechartOfcontroller, P_main_regionOfStatechartOfprior, P_normalOfNormalOfsecondary, P_operatingOfOperatingOfcontroller, P_interruptedOfInterruptedOfprior, P_normalOfNormalOfprior, P_interruptedOfInterruptedOfsecondary, P_main_regionOfStatechartOfsecondary, P_ClockTemplate, P_CrossroadOrchestrator0, P_Environment;
</system>
		</nta>

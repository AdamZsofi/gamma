package interfaces

import "Types/Types.gcd"

interface F_VU_lez {
	out persistent event ker(ker_VU_tip : VU_tip_t)
	in event val(val_VU_tip : valasz_t, obj_id : obj_t)
}

interface OV_keres {
	out persistent event ker(ker_OV_tav : tavolsag_t)
	out event felold
	in event val(val_OV_tip : valasz_t)
}

//interface Vaganyut_Lezar {
//// Parancs
//	out event FI_VU_lez
//	out persistent event FI_VU_tip(FI_VU_tipValue : VU_tip_t)
//	out event FI_OV(FI_OVValue : tavolsag_t) // Oldalvedelem keres
//	// Valasz
//	in event FO_valasz(FO_valaszValue : valasz_t)
//	in event FO_obj(FO_objValue : obj_t)
//	in event FO_OV_valasz(FO_OV_valaszValue : valasz_t) // Oldalvedelem valasz
//}
interface Jelzo_Also {
//// Visszajelentes
	out persistent event AI_jelzes(AI_jelzesValue : J_jelzes_t)
//	out event AI_S_fogl(AI_S_foglValue : fogl_t)
//	out event AI_C_fogl(AI_C_foglValue : fogl_t)
}
interface Valto_Also {
//// Visszajelentes
	out event AI_ell(AI_ellValue : V_ell_t)
	out event AI_fogl(AI_foglValue : fogl_t)
}
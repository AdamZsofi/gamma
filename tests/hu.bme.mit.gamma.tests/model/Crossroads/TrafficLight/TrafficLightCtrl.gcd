package trafficlightctrl
import "/hu.bme.mit.gamma.tests/model/Crossroads/Interfaces/Interfaces.gcd"
@PrioritizedTransitions = order-based
statechart TrafficLightCtrl [
	port LightCommands : provides LightCommands
	port Control : requires Control
	port PoliceInterrupt : requires PoliceInterrupt
] {
	var b : integer
	var asd : integer
	var c : boolean
	var a : boolean
	timeout BlackTimeout3
	timeout BlinkingYellowTimeout4
	transition from Black to BlinkingYellow when timeout BlackTimeout3
	transition from BlinkingYellow to Black when timeout BlinkingYellowTimeout4
	transition from Entry0 to BlinkingYellow
	transition from Entry1 to Normal
	transition from Entry2 to Red
	transition from Green to Yellow when Control.toggle / b := 4;
	transition from Interrupted to Normal when PoliceInterrupt.police
	transition from Normal to Interrupted when PoliceInterrupt.police
	transition from Red to Green when Control.toggle
	transition from Yellow to Red when Control.toggle
	region Main_region {
		state Normal {
			exit / asd := 321;
			region normal {
				shallow history Entry2
				state Yellow {
					entry / raise LightCommands.displayYellow;
				}
				state Red {
					entry / raise LightCommands.displayRed;
					exit / a := true;
				}
				state Green {
					entry / raise LightCommands.displayGreen;
				}
			}
		}
		state Interrupted {
			region interrupted {
				initial Entry0
				state Black {
					entry / set BlackTimeout3 := 500 ms; raise LightCommands.displayNone;
				}
				state BlinkingYellow {
					entry / set BlinkingYellowTimeout4 := 500 ms; raise LightCommands.displayYellow;
				}
			}
		}
		initial Entry1
	}
}
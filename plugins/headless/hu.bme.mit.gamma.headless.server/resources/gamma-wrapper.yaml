openapi: 3.0.3
info:
  version: 1.1.0
  title: Gamma Wrapper API
  description: 'An API that allows users to use the Gamma framework via http requests'
paths:
  /gamma/workspace:
    put:
      operationId: addWorkspace
      description: Create and return the name of workspace
      responses:
        200:
          description: Successfully created a workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceIdentifier'
        500:
          description: The workspace generation failed
  /gamma/{workspace}/project:
    post:
      operationId: addProject
      description: Send a file that contains the eclipse project on which the gamma operations will run
      parameters:
        - $ref: '#/components/parameters/WorkspaceIdentifierParam'
      requestBody:
        content:
          application/octet-stream:
             schema:
               type: string
               format: binary
      responses:
        200:
          description: Successfully uploaded the file
        404:
          description: Did not provide a valid workspace
        400:
          description: Project already exists under this workspace, delete it and resend this request
  /gamma/{workspace}/{project}/run:
    put:
      operationId: runOperation
      description: Start a gamma operation based on the ggen file
      parameters:
        - $ref: '#/components/parameters/WorkspaceIdentifierParam'
        - $ref: '#/components/parameters/ProjectIdentifierParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GgenPath'
      responses:
        200:
          description: The operation has started
        404:
          description: Did not provide a valid workspace or project name
        503:
          description: This project is already under operation
  /gamma/{workspace}/{project}/stop:
    put:
      operationId: stopOperation
      description: Stop a gamma operation based on the given workspace-projectName pair
      parameters:
        - $ref: '#/components/parameters/WorkspaceIdentifierParam'
        - $ref: '#/components/parameters/ProjectIdentifierParam'
      responses:
        200:
          description: The operation has stopped
        404:
          description: Did not provide a valid workspace or project name
        503:
          description: This project is not under operation
  /gamma/{workspace}/{project}:
    post:
      operationId: getResult
      description: Get artifacts generated by gamma operation, the artifact properties should
      parameters:
        - $ref: '#/components/parameters/WorkspaceIdentifierParam'
        - $ref: '#/components/parameters/ProjectIdentifierParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFilesList'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
        503:
          description: The project is currently under operation
        404:
          description: Did not provide a valid workspace or project name
    get:
      summary: Get the list of files inside the project
      description: Get the list of files inside the project
      operationId: list
      parameters:
        - $ref: '#/components/parameters/WorkspaceIdentifierParam'
        - $ref: '#/components/parameters/ProjectIdentifierParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFilesList'
        '404':
          description: Did not provide a valid workspace or project name
    delete:
      operationId: deleteProject
      description: Delete project under specified workspace
      parameters:
        - $ref: '#/components/parameters/WorkspaceIdentifierParam'
        - $ref: '#/components/parameters/ProjectIdentifierParam'
      responses:
        200:
          description: Success
        503:
          description: The project is currently under operation
        404:
          description: Did not provide a valid workspace or project name
          
  
  /gamma/{workspace}/{project}/status:
    get:
      summary: Get the status of the project.
      operationId: getStatus
      parameters:
        - $ref: '#/components/parameters/WorkspaceIdentifierParam'
        - $ref: '#/components/parameters/ProjectIdentifierParam'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFilesList'
        404:
          description: Did not provide a valid workspace or project name
  /gamma/{workspace}/addandrun:
    put:
      summary: Uploads a project to the workspace and executes a .ggen file
      operationId: addAndRun
      parameters:
        - $ref: '#/components/parameters/WorkspaceIdentifierParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                ggenPath:
                   type: string
      responses:
        200:
          description: Successfully uploaded the project and executed the task
        503:
          description: The project is currently under operation
        404:
          description: Did not provide a valid workspace or project name
        400:
          description: Project already exists under this workspace, delete it and resend this request
          
          
  /gamma/setloglevel/{logLevel}:
    put:
      summary: Sets the log level of both the server and the Headless Gamma.
      description: ''
      operationId: setLogLevel
      parameters:
        - in: path
          name: logLevel
          required: true
          description: The desired verbosity of the logger, both for the server and the Headless Gamma.
          schema:
            type: string
            example: info, warning, severe
         
      responses:
        '200':
          description: Log level successfully set.
        '400':
          description: Wrong logging level provided
          
  /gamma/{workspace}/getlogs:
    put:
      summary: Retrieves the logs from a workspace.
      description: ''
      operationId: getLogs
      parameters:
      - $ref: '#/components/parameters/WorkspaceIdentifierParam'
      responses:
        '200':
          description: Log file successfully sent.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
        '404':
           description: Log file does not exist.
          
  /gamma/deleteworkspace/{workspace}:
    put:
       summary: Deletes a given workspace if it exists and is empty.
       operationId: deleteWorkspace
       parameters:
          - $ref: '#/components/parameters/WorkspaceIdentifierParam'
       responses:
          200:
             description: Success
          400:
             description: Workspace doesn't exist, or isn't empty.
                
components:
  parameters:
    WorkspaceIdentifierParam:
      in: path
      name: workspace
      required: true
      schema:
        type: string
        format: uuid
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      description: "Defines the workspace inside the Gamma container."
    ProjectIdentifierParam:
      in: path
      name: project
      required: true
      schema:
        type: string
        example: gamma.test.project
      description: "Defines the project inside a specific workspace."
  responses:
    UnexpectedError:
      description: 'Unexpected error occurred.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    WorkspaceIdentifier:
      properties:
        id:
          type: 'string'
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          description: 'The model ID of the Interaction that specifies the reachability property.'
      required:
        - id
    ProjectFile:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: 'The eclipse project exported as a .zip file.'
      required:
        - file
    GgenPath:
      type: object
      properties:
        ggenPath:
          type: 'string'
          description: 'The ggen path inside the project.'
      required:
        - ggenPath
    ProjectFileWithGgenPath:
      type: object
      properties:
        file:
          type: 'string'
          format: binary
          description: 'The eclipse project exported as a .zip file.'
        ggenPath:
          type: 'string'
          description: 'The ggen path inside the project.'
      required:
        - file
        - ggenPath
    ProjectFilesList:
      type: object
      properties:
        files:
          type: array
          description: 'The files under the specified project'
          items:
            type: 'string'
    Error:
      properties:
        message:
          type: string
          example: 'Exception occurred during request processing'
        details:
          type: object
          properties:
            trace:
              $ref: "#/components/schemas/StackTrace"
      required:
        - message
    StackTrace:
      type: array
      items:
        type: string
      example:
        - "java.lang.IllegalStateException: Some variable should not be null"
        - "at some.package.SomeClass.someMethod(SomeClass:52)"
        - "at some.package.CallerClass.callerMethod(SpecificCallerClass:117)"
 